---
- include_vars: "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_os_family }}.yml"
    - "../vars/Debian.yml"
  when: install_wagtail_packages is not defined
- name: install packages
  package: name={{item}} state=latest
  with_items: "{{ install_wagtail_packages }}"
- name: chown to user
  file: path=/var/lib/elasticsearch owner=elasticsearch recurse=yes
- name: copy default file
  template: src=elasticsearch dest=/etc/default/elasticsearch
- name: elasticsearch enable
  service: name=elasticsearch enabled=yes
- name: elasticsearch restart
  service: name=elasticsearch state=restarted
- name: add project user
  user: name={{project_user}} comment="{{ project }}"
- name: project checkout
  git: repo=https://github.com/torchbox/wagtaildemo.git dest={{project_path}}
- name: chown to user
  file: path={{project_path}} owner={{project_user}}
- name: install requirements
  pip: requirements={{project_path}}/requirements.txt
- name: install django-redis-cache
  pip: name=django-redis-cache state=latest
- name: copy local.py
  template: src=local.j2 dest={{ project_path }}/wagtaildemo/settings/local.py
- name: migrate db
  become: yes
  become_user: "{{project_user}}"
  django_manage: command=migrate app_path={{project_path}}
  register: migration
- name: initiate db
  become: yes
  become_user: "{{project_user}}"
  django_manage: command=load_initial_data app_path={{project_path}}
  when: migration.changed
- name: update index
  become: yes
  become_user: "{{project_user}}"
  django_manage: command=update_index app_path={{project_path}}
- name: copy uwsgi file
  template: src=uwsgi.j2 dest={{ project_path }}/uwsgi.yaml
- name: get uwsgi PATH
  command: which uwsgi
  register: uwsgi_path
- name: copy service
  template: src=uwsgi.service.j2 dest=/lib/systemd/system/{{project}}.service
  notify:
    - daemon-reload
- name: service enable
  service: name={{project}} enabled=yes
- name: service start
  service: name={{project}} state=started
